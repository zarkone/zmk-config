/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};

&mt {
    tapping-term-ms = <200>;
};

// 0  1  2  3  4    5  6  7  8  9
// 10 11 12 13 14   15 16 17 18 19
// 20 21 22 23 24   25 26 27 28 29
//       30 31 32   33 34 35

/ {
    combos {
        compatible = "zmk,combos";

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp LGUI>;
        };
        combo_rgui {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp RGUI>;
        };

        combo_lctrl {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LCTRL>;
        };

        combo_rctrl {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp RCTRL>;
        };

        combo_rshft {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp RSHFT>;
        };

    };


        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "> CLDH";
                        bindings = <
            &kp Q            &kp W      &kp F &kp P          &kp B        &kp J &kp L          &kp U       &kp Y   &kp SEMI
            &lh_sft LSHFT A  &kp R      &kp S &lh_win LGUI T &kp G        &kp M &rh_win RGUI N &kp E       &kp I   &rh_sft RSHFT O
            &lh_ctrl LCTRL Z &kp X      &kp C &kp D          &kp V        &kp K &kp H          &kp COMMA   &kp DOT &rh_ctrl RCTRL FSLH

                               &lt 2 EQUAL  &lt 1 SPACE &mt LALT SPACE        &mt RALT RET  &lt 1 BSPC  &lt 2 SPACE
                        >;
                };

                lower_layer {
                        label = "$ SYM";
                        bindings = <
             &kp TAB  &kp UNDER  &kp EQUAL  &kp MINUS  &kp PLUS         &kp K_MUTE  &kp K_VOL_DN  &kp K_PP  &kp K_VOL_UP  &kp BSLH
             &kp LT   &kp GT     &kp LPAR   &kp RPAR   &kp PG_UP        &kp DQT     &kp LEFT      &kp UP    &kp RIGHT     &kp SQT
             &kp LBRC &kp RBRC   &kp LBKT   &kp RBKT   &kp PG_DN        &kp TILDE   &kp HOME      &kp DOWN  &kp END       &trans

                              &lt 3  TAB     &kp ESC    &kp LALT        &kp RALT     &kp DEL    &lt 3 EQUAL
                        >;
                };

                raise_layer {
                        label = "# NUM";
                        bindings = <
            &trans    &trans  &trans    &kp AMPS   &kp KP_MULTIPLY   &caps_word &kp N7 &kp N8 &kp N9 &kp TILDE
            &kp EXCL  &kp AT  &kp HASH  &kp DLLR   &kp CARET         &kp CAPS   &kp N4 &kp N5 &kp N6 &kp GRAVE
            &trans    &trans &trans     &kp PRCNT  &kp PIPE          &kp PSCRN  &kp N1 &kp N2 &kp N3 &kp DOT

                           &trans &lt 3 SPACE   &kp SPACE             &kp N0   &lt 3 DOT &trans
                        >;
                };

                func_layer {
                        label = "} Fn";
                        bindings = <
           &bt BT_CLR    &trans        &trans        &trans        &trans     &trans   &kp F7   &kp F8  &kp F9  &kp F10
           &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans     &trans   &kp F4   &kp F5  &kp F6  &kp F11
           &trans        &trans        &trans        &trans        &trans     &trans   &kp F1   &kp F2  &kp F3  &kp F12

                          &trans   &trans    &trans                   &trans    &trans   &trans
                        >;
                };
        };
};