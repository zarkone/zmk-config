/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

&mt {
    tapping-term-ms = <400>;
};

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <250>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34>;    // <---[[right-hand keys]]
        };
        rh_pht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <250>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 25 26 27 28 29>;    // <---[[left-hand keys]]
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "^ ARST";
                        bindings = <
   &trans   &kp Q           &kp W &kp F &kp P          &kp B           &kp J &kp L           &kp U     &kp Y   &kp SEMI           &trans
   &trans   &bhm LSHFT A &kp R &kp S &bhm LGUI T &kp G           &kp M &bhm RGUI N  &kp E     &kp I   &bhm RSHFT O        &trans
   &trans   &bhm LCTRL Z &kp X &kp C &kp D          &kp V           &kp K &kp H           &kp COMMA &kp DOT &bhm RCTRL FSLH     &trans

             &lt 2 EQUAL  &lt 1 SPACE &mt LALT SPACE           &mt RALT RET  &lt 1 BSPC  &lt 2 SPACE
                        >;
                };
                lower_layer {
                        label = "$ SYM";
                        bindings = <
   &trans     &kp TAB  &kp UNDER  &kp EQUAL  &kp MINUS  &kp MINUS        &kp K_MUTE  &kp K_VOL_DN  &kp K_PP  &kp K_VOL_UP  &kp BSLH     &trans
   &trans     &kp LT   &kp GT     &kp LPAR   &kp RPAR   &kp PG_UP        &kp DQT     &kp LEFT      &kp UP    &kp RIGHT     &kp SQT       &trans
   &trans     &kp LBRC &kp RBRC   &kp LBKT   &kp RBKT   &kp PG_DN        &kp UNDER   &kp HOME      &kp DOWN  &kp END       &trans       &trans

                              &lt 3  TAB     &kp ESC       &kp SPACE     &kp DEL     &trans    &lt 3 EQUAL
                        >;
                };

                raise_layer {
                        label = "# NUM";
                        bindings = <
   &trans   &trans    &trans  &trans    &kp AMPS   &kp KP_MULTIPLY   &trans   &kp N7 &kp N8 &kp N9 &kp TILDE  &trans
   &trans   &kp EXCL  &kp AT  &kp HASH  &kp DLLR   &kp CARET         &kp CAPS &kp N4 &kp N5 &kp N6 &kp GRAVE  &trans
   &trans   &trans    &trans &trans     &kp PRCNT  &kp PIPE          &kp_PRINTSCREEN   &kp N1 &kp N2 &kp N3 &kp PIPE   &trans

                           &trans &lt 3 SPACE   &kp SPACE             &kp N0   &lt 3 DOT &trans
                        >;
                };

                func_layer {
                        label = "> FUNC";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans   &bt BT_CLR    &trans        &trans        &trans        &trans     &trans   &kp F7   &kp F8  &kp F9  &kp F10  &trans
   &trans   &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans     &trans   &kp F4   &kp F5  &kp F6  &kp F11  &trans
   &trans   &trans        &trans        &trans        &trans        &trans     &trans   &kp F1   &kp F2  &kp F3  &kp F12  &trans

                          &trans   &trans    &trans                   &trans    &trans   &trans
                        >;
                };
        };
};